/* We import images in React */

import reactImg from './assets/react-core-concepts.png';

function Header() {
	return (
		<header>
			<img src={reactImg} alt="Stylized atom" />
		</header>
	);
}

==========

/* props */

import componentsImg from './assets/components.png';

function CoreConcepts(props) {
	return (
		<li>
			<img src={props.image} alt={props.title} />
			<h3>{props.title}</h3>
			<p>{props.description}</p>
		</li>
	);
}

function App() {
	return (
		<div>
			<CoreConcept
				title="Components"
				description="The core UI building block."
				image={componentsImg}
			/>
		</div>
	);
}

==========

/* Named exports are imported with curly braces */

// File1.js
export const CORE_CONCEPTS = [
	{
		image: componentsImg,
		title: 'Components',
		description:
			'The core UI building block'
	},
];

// File2.jsx
impot { CORE_CONCEPTS } from './File1.js';

==========

/* Accessing objects in an array */

<CoreConcept
	title={CORE_CONCEPTS[0].title}
	description={CORE_CONCEPTS[0].description}
	image={CORE_CONCEPTS[0].image}
/>

/* Using spread operator to pull out all key:value pairs of an object and add them as props */

<CoreConcept {...CORE_CONCEPTS[0]} />

==========

/* Object destructuring to target different properties of the incoming object by name */

function CoreConcepts({image, title, description}) {
	return (
		<li>
			<img src={image} alt={title} />
			<h3>{title}</h3>
			<p>{description}</p>
		</li>
	);
}

==========

/* Passing a single prop object */

<CoreConcept concept={CORE_CONCEPTS[0]} />

export default function CoreConcept({ concept }) {
	// can then destructure the concept object
	const { title, description, image } = concept;
	return (
		<li>
			<img src={image} alt={title} />
			<h3>{title}</h3>
			<p>{description}</p>
		</li>
	);
}